<h1 class="text-2xl font-bold mb-4 text-purple-700">Custom Requests</h1>
<a href="/designer/dashboard" class="text-purple-500 hover:underline mb-4 inline-block">&larr; Back to Dashboard</a>

<!-- List of custom requests -->
<h2 class="text-xl font-semibold mb-4">Your Custom Requests</h2>
<div class="overflow-x-auto">
  <table class="min-w-full bg-white border border-purple-100 rounded-2xl shadow-lg text-xs md:text-sm">
    <thead class="bg-gradient-to-r from-purple-100 to-pink-100">
      <tr>
        <th class="py-2 px-2 md:py-3 md:px-4 border-b font-semibold text-gray-700">User</th>
        <th class="py-2 px-2 md:py-3 md:px-4 border-b font-semibold text-gray-700">Description</th>
        <th class="py-2 px-2 md:py-3 md:px-4 border-b font-semibold text-gray-700">Budget</th>
        <th class="py-2 px-2 md:py-3 md:px-4 border-b font-semibold text-gray-700">Deadline</th>
        <th class="py-2 px-2 md:py-3 md:px-4 border-b font-semibold text-gray-700">Image</th>
        <th class="py-2 px-2 md:py-3 md:px-4 border-b font-semibold text-gray-700">Size / Measurement</th>
        <th class="py-2 px-2 md:py-3 md:px-4 border-b font-semibold text-gray-700">Address</th>
        <th class="py-2 px-2 md:py-3 md:px-4 border-b font-semibold text-gray-700">Status</th>
        <th class="py-2 px-2 md:py-3 md:px-4 border-b font-semibold text-gray-700">Actions</th>
        <th class="py-2 px-2 md:py-3 md:px-4 border-b font-semibold text-gray-700">Requested At</th>
      </tr>
    </thead>
    <tbody>
      <% if (customRequests.length === 0) { %>
        <tr><td colspan="10" class="text-center py-6 text-gray-400">No custom requests found.</td></tr>
      <% } else { %>
        <% customRequests.forEach(function(request, idx) { %>
          <tr class="<%= idx % 2 === 0 ? 'bg-white' : 'bg-purple-50' %>">
            <td class="py-2 px-2 md:py-3 md:px-4 border-b"><%= request.userId && request.userId.name ? request.userId.name : 'User' %></td>
            <td class="py-2 px-2 md:py-3 md:px-4 border-b"><%= request.description %></td>
            <td class="py-2 px-2 md:py-3 md:px-4 border-b"><%= request.budget ? '\u20b9' + request.budget : '-' %></td>
            <td class="py-2 px-2 md:py-3 md:px-4 border-b"><%= request.deadline ? request.deadline.toLocaleDateString() : '-' %></td>
            <td class="py-2 px-2 md:py-3 md:px-4 border-b">
              <% if (request.image) { %>
                <img src="<%= request.image %>" alt="Reference" class="h-12 w-12 object-cover rounded" />
              <% } else { %>
                -
              <% } %>
            </td>
            <td class="py-2 px-2 md:py-3 md:px-4 border-b"><%= request.size ? request.size : '-' %></td>
            <td class="py-2 px-2 md:py-3 md:px-4 border-b"><%= request.address %></td>
            <td class="py-2 px-2 md:py-3 md:px-4 border-b">
              <% if (request.status === 'pending') { %>
                <span class="bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full text-xs font-bold">Pending</span>
              <% } else if (request.status === 'accepted') { %>
                <span class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-xs font-bold">Accepted</span>
              <% } else if (request.status === 'rejected') { %>
                <span class="bg-red-100 text-red-800 px-3 py-1 rounded-full text-xs font-bold">Rejected</span>
              <% } else if (request.status === 'completed') { %>
                <span class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-xs font-bold">Completed</span>
              <% } %>
            </td>
            <td class="py-2 px-2 md:py-3 md:px-4 border-b flex flex-col gap-2">
              <% if (request.status !== 'accepted') { %>
                <form action="/designer/custom-requests/<%= request._id %>/status" method="POST" class="flex items-center gap-2 mb-1">
                  <input type="hidden" name="status" value="accepted">
                  <input type="number" name="designerPrice" placeholder="Price" min="1" step="0.01" class="w-20 border rounded px-2 py-1 text-xs" required>
                  <button type="submit" class="bg-green-500 hover:bg-green-600 text-white px-3 py-1 rounded text-xs font-semibold">Accept the Request</button>
                </form>
              <% } else { %>
                <span class="text-green-600 font-semibold text-xs">Accepted</span>
              <% } %>
              <% const userIdStr = request.userId ? request.userId._id : ''; %>
              <button class="bg-purple-500 hover:bg-purple-600 text-white px-3 py-1 rounded text-xs font-semibold" onclick="openChatModal('<%= userIdStr %>', '<%= request._id %>')">Chat with the Customer</button>
            </td>
            <td class="py-2 px-2 md:py-3 md:px-4 border-b"><%= request.createdAt ? request.createdAt.toLocaleDateString() : '-' %></td>
          </tr>
        <% }); %>
      <% } %>
    </tbody>
  </table>
</div>

<!-- Chat Modal Placeholder -->
<div id="chatModal" class="hidden fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50">
  <div class="bg-white rounded-lg shadow-lg w-full max-w-md p-4 relative flex flex-col" style="max-height:90vh;">
    <button onclick="closeChatModal()" class="absolute top-2 right-2 text-gray-400 hover:text-gray-700 text-2xl">&times;</button>
    <h3 class="text-lg font-bold mb-2 text-purple-700">Chat with Customer</h3>
    <div id="chatMessages" class="flex-1 h-64 md:h-80 overflow-y-auto border rounded p-2 mb-2 bg-gray-50"></div>
    <form id="chatForm" class="flex gap-2 mt-auto">
      <input type="text" id="chatInput" class="flex-1 border rounded px-2 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-purple-400" placeholder="Type your message..." required />
      <button type="submit" class="bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded font-semibold">Send</button>
    </form>
  </div>
</div>
<!-- Add Socket.IO client -->
<script src="/socket.io/socket.io.js"></script>
<script>
  const DESIGNER_ID = '<%= designer._id %>';
  let currentUserId = null;
  let currentRequestId = null;
  let socket = io();

  function renderMessage(data) {
    const chatMessages = document.getElementById('chatMessages');
    const msgDiv = document.createElement('div');
    msgDiv.className = data.senderId == DESIGNER_ID ? 'text-right mb-1' : 'text-left mb-1';
    msgDiv.innerHTML = `<span class='inline-block px-2 py-1 rounded bg-purple-200 text-sm'>${data.message}</span>`;
    chatMessages.appendChild(msgDiv);
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }

  function openChatModal(userId, requestId) {
    document.getElementById('chatModal').classList.remove('hidden');
    currentUserId = userId;
    currentRequestId = requestId;
    document.getElementById('chatMessages').innerHTML = '';
    socket.emit('joinRoom', { requestId: currentRequestId });
  }
  function closeChatModal() {
    document.getElementById('chatModal').classList.add('hidden');
    document.getElementById('chatMessages').innerHTML = '';
    if (currentRequestId) {
      socket.emit('leaveRoom', { requestId: currentRequestId });
    }
    currentUserId = null;
    currentRequestId = null;
  }
  document.getElementById('chatForm').addEventListener('submit', function(e) {
    e.preventDefault();
    const message = document.getElementById('chatInput').value.trim();
    if (!message || !currentRequestId) return;
    const data = {
      requestId: currentRequestId,
      sender: 'designer',
      senderId: DESIGNER_ID,
      message
    };
    renderMessage(data); // Show sent message instantly
    socket.emit('chatMessage', data);
    document.getElementById('chatInput').value = '';
  });
  socket.on('previousMessages', function(messages) {
    const chatMessages = document.getElementById('chatMessages');
    chatMessages.innerHTML = '';
    messages.forEach(renderMessage);
  });
  socket.on('chatMessage', function(data) {
    if (data.requestId !== currentRequestId) return;
    renderMessage(data);
  });
</script> 